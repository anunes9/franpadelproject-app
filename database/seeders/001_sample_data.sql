-- Sample data for FranPadelProject Admin
-- This file contains sample users, clients, products, and sales for development

-- Sample Users (Admin and Sales)
INSERT INTO users (id, email, full_name, role) VALUES
-- Admin user
('21f8e495-5463-43b7-aa57-4a904124dca2', 'admin@franpadel.com', 'Admin User', 'admin'),
-- Sales users
('81ff4311-19af-49c3-a285-b20b0de5921d', 'carlos@franpadel.com', 'Carlos Rodriguez', 'sales'),
('f33f418f-3376-40c0-833a-a2b620144721', 'maria@franpadel.com', 'Maria Garcia', 'sales'),
('7490da3f-2d40-4b5e-9042-42cf85d66db7', 'juan@franpadel.com', 'Juan Martinez', 'sales');

-- Sample Products
INSERT INTO products (name, description, type, price, duration) VALUES
-- Courses
('Complete Padel Training Program', 'Comprehensive padel training covering all aspects of the game', 'course', 299.00, 90),
('Advanced Techniques Course', 'Specialized training for intermediate and advanced players', 'course', 399.00, 60),
('Beginner Fundamentals', 'Essential skills and techniques for new players', 'course', 199.00, 30),

-- Clinics
('Performance Enhancement Clinic', 'One-day clinic focusing on physical performance and mental preparation', 'clinic', 89.00, NULL),
('Tactical Strategy Workshop', 'Learn advanced tactical strategies and match analysis', 'clinic', 149.00, NULL),
('Technique Refinement Session', 'Focus on perfecting your stroke technique and movement', 'clinic', 99.00, NULL),

-- Formations
('Padel Coach Certification', 'Complete training program for aspiring padel coaches', 'formation', 999.00, 180),
('Professional Player Development', 'Intensive training program for competitive players', 'formation', 1999.00, 365),
('Club Management Course', 'Learn how to manage and grow a padel club', 'formation', 599.00, 90);

-- Sample Clients
INSERT INTO clients (email, full_name, phone, salesman_id, notes) VALUES
('roberto.sanchez@email.com', 'Roberto Sanchez', '+34 612 345 678', 'f33f418f-3376-40c0-833a-a2b620144721', 'Very enthusiastic player, wants to improve quickly'),
('laura.mendez@email.com', 'Laura Mendez', '+34 623 456 789', 'f33f418f-3376-40c0-833a-a2b620144721', 'Beginner level, interested in the fundamentals course'),
('miguel.lopez@email.com', 'Miguel Lopez', '+34 634 567 890', 'f33f418f-3376-40c0-833a-a2b620144721', 'Competitive player looking for advanced training'),
('carmen.fernandez@email.com', 'Carmen Fernandez', '+34 645 678 901', '7490da3f-2d40-4b5e-9042-42cf85d66db7', 'Club manager interested in management course'),
('david.gonzalez@email.com', 'David Gonzalez', '+34 656 789 012', 'f33f418f-3376-40c0-833a-a2b620144721', 'Former tennis player transitioning to padel'),
('isabel.rodriguez@email.com', 'Isabel Rodriguez', '+34 667 890 123', 'f33f418f-3376-40c0-833a-a2b620144721', 'Wants to start coaching, interested in certification'),
('jorge.perez@email.com', 'Jorge Perez', '+34 678 901 234', '7490da3f-2d40-4b5e-9042-42cf85d66db7', 'Competitive player, needs performance enhancement'),
('ana.martin@email.com', 'Ana Martin', '+34 689 012 345', 'f33f418f-3376-40c0-833a-a2b620144721', 'Beginner, looking for group training options');

-- Get product IDs for sales
-- Note: We'll use the actual UUIDs generated by the products table
-- This is just for reference, actual sales will be inserted with proper foreign keys

-- Sample Sales
-- First, let's get the actual product IDs
INSERT INTO sales (client_id, product_id, salesman_id, sale_date, amount, payment_status, notes)
SELECT
  c.id,
  p.id,
  c.salesman_id,
  CURRENT_DATE - INTERVAL '30 days' + (random() * INTERVAL '60 days'),
  p.price,
  CASE
    WHEN random() < 0.8 THEN 'paid'::payment_status
    WHEN random() < 0.9 THEN 'pending'::payment_status
    ELSE 'cancelled'::payment_status
  END,
  CASE
    WHEN random() < 0.3 THEN 'Payment received via bank transfer'
    WHEN random() < 0.6 THEN 'Credit card payment processed'
    ELSE NULL
  END
FROM clients c
CROSS JOIN (
  SELECT id, price FROM products
  ORDER BY random()
  LIMIT 12
) p
WHERE random() < 0.7;  -- 70% chance of having a sale

-- Sample Client Products (access management)
-- This will be automatically handled by triggers or application logic
-- For now, let's create some sample access records
INSERT INTO client_products (client_id, product_id, sale_id, access_start_date, access_end_date, is_active)
SELECT
  s.client_id,
  s.product_id,
  s.id,
  s.sale_date,
  CASE
    WHEN p.duration IS NOT NULL THEN s.sale_date + INTERVAL '1 day' * p.duration
    ELSE NULL
  END,
  CASE
    WHEN p.duration IS NOT NULL THEN s.sale_date + INTERVAL '1 day' * p.duration > CURRENT_DATE
    ELSE true
  END
FROM sales s
JOIN products p ON s.product_id = p.id
WHERE s.payment_status = 'paid';
